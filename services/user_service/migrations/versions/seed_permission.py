"""seed permission

Revision ID: 
Revises: 
Create Date:

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.sql.selectable import TableClause
from common.statics.constants.actions import BasicAction, UserAction
from common.statics.constants.resources import Resources


# revision identifiers, used by Alembic.
revision = ''
down_revision = ''
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    seed_permission(op)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    conn = op.get_bind()
    conn.execute(f"delete from permission where resource is not null;")
    # ### end Alembic commands ###


def seed_permission(op: op):
    tb_permission: TableClause = sa.table(
    'permission',
    sa.column('resource', sa.String),
    sa.column('action', sa.String),
    )

    insert_data = []
    for resource in Resources:
        body = {
            'default': '',
            'resource': resource.value,
            'is_deleted': False
        }

        if resource == Resources.Organization:
            for action in BasicAction:
                insert_data.append({**body, 'action': action.value})

    op.bulk_insert(tb_permission, insert_data)
